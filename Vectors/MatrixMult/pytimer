#!/usr/bin/python
import sys, time, os, subprocess

matrixSize = sys.argv[1] # pass in an integer

silent = " 2>&1 > /dev/null" # redirect standard output to trash
jtest  = "exe/jnothing"
ctest  = "exe/cnothing"
jreal  = "exe/jexe"
creal  = "exe/cexe"

def timer(filename):
    """ Measure the time it takes to invoke the given command
    using a shell subprocess. """
    strCmd = "./" + filename + silent
    start = end = 0
    start = time.time()
    myProcess = subprocess.Popen(strCmd, shell=True)
    end = time.time()
    myProcess.wait()
    return end - start

def avg(filename):
    """ how long it takes for python to simply call an external program """
    iters = 10 
    avg = 0
    for i in range(iters):
        avg += timer(filename)
    result = avg / iters
    return result

#def winner(a1, n1, a2, n2):
#    output = "Results:\n"
#    if (a1 > a2):
#        output = n1 + ", was " + (a1 / a2) + " times faster than " + n2
#    elif (a1 < a2):
#        output = n2 + ", was " + (a2 / a1) + " times faster than " + n1
#    else:
#        output = "tie"
#    return output

print avg(creal) # segfaulting...
#print avg(jreal)
#print winner(avg(creal), "C++", avg(jreal), "J")

