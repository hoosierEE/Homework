#!/usr/bin/python
import time, os, subprocess

silent = " 2>&1 > /dev/null" # redirect standard output to trash
jtest = "exe/jnothing"
ctest = "exe/cnothing"
jreal = "./exe/jexe"
creal = "./exe/cexe"

def timer(cmd):
    """ Measure the time it takes to invoke the given command
    using a shell subprocess. """
    cmd += silent
    start = time.time()
    subprocess.Popen(cmd, shell=True)
    end = time.time()
    return end - start

def overhead(fname):#{{{
    """ how long it takes for python to simply call an external program """
    if os.path.isfile(fname):
        cmd = "./" + fname # execute the command using bash syntax ./filename
        iters = 100
        avg = 0
        for i in range(iters):
            avg += timer(cmd)
        return avg / iters 
    else:
        return "missing file"#}}}

# calculate overhead#{{{
jOH = overhead(jtest)
cOH = overhead(ctest)#}}}

# calculate time to run "real" programs 
jtime = timer(jreal)
ctime = timer(creal)

print "J system time: ", jtime
print "C++ system time: ", ctime

#print ""
#print "J interpreter overhead: ", jOH
#print "C++ binary file overhead: ", cOH
#print "J realistic time: ", jtime - jOH
#print "C++ realistic time: ", ctime - cOH
#
