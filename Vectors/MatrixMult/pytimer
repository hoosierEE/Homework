#!/usr/bin/python
import sys, time, os, subprocess

matrixSize = sys.argv[1] # pass in an integer

silent = " 2>&1 > /dev/null" # redirect standard output to trash
jtest  = "exe/jnothing"
ctest  = "exe/cnothing"
jreal  = "./exe/jexe " + matrixSize
creal  = "./exe/cexe " + matrixSize


def timer(cmd):
    """ Measure the time it takes to invoke the given command
    using a shell subprocess. """
    cmd += silent
    start = time.time()
    myProcess = subprocess.Popen(cmd, shell=True)
    end = time.time()
    myProcess.wait()
    return end - start

def overhead(fname):#{{{
    """ how long it takes for python to simply call an external program """
    if os.path.isfile(fname):
        cmd = "./" + fname # execute the command using bash syntax ./filename
        iters = 100
        avg = 0
        for i in range(iters):
            avg += timer(cmd)
        return avg / iters 
    else:
        return "missing file"#}}}

# do test a few times, take average
iters = 10
javg = 0
cavg = 0
for i in range(iters):
    jt = timer(jreal)
    ct = timer(creal)
    javg += jt
    cavg += ct

#print "C++ average, minus overhead: ", (cavg - overhead(ctest)) / iters
#print "J average, minus overhead: ", (javg - overhead(jtest)) / iters
print "C++ avg: ", cavg / iters
print "J avg: ", javg / iters
